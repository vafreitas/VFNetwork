"use strict";(self.webpackChunkvf_network=self.webpackChunkvf_network||[]).push([[1291],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),u=o,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||a;return r?n.createElement(f,s(s({ref:t},c),{},{components:r})):n.createElement(f,s({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1461:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2,title:"Post",description:"my hello page description",hide_table_of_contents:!1},s="POST",i={unversionedId:"http-methods/post",id:"version-1.4.2/http-methods/post",title:"Post",description:"my hello page description",source:"@site/versioned_docs/version-1.4.2/http-methods/post.md",sourceDirName:"http-methods",slug:"/http-methods/post",permalink:"/docs/1.4.2/http-methods/post",draft:!1,editUrl:"https://github.com/vafreitas/VFNetwork/versioned_docs/version-1.4.2/http-methods/post.md",tags:[],version:"1.4.2",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Post",description:"my hello page description",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"Get",permalink:"/docs/1.4.2/http-methods/get"},next:{title:"Unit Tests",permalink:"/docs/1.4.2/Unit-Tests"}},l={},p=[{value:"Type of Tasks.",id:"type-of-tasks",level:3},{value:"VCodable Model Example.",id:"vcodable-model-example",level:3},{value:"POST Example",id:"post-example",level:3}],c={toc:p},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"post"},"POST"),(0,o.kt)("p",null,"To configure a route with the post method just configure your httpMethod with ",(0,o.kt)("strong",{parentName:"p"},".post")," and task with ",(0,o.kt)("strong",{parentName:"p"},".requestEncoder")," with protocol ",(0,o.kt)("strong",{parentName:"p"},"VCodable")," or other type of task."),(0,o.kt)("p",null,"For your request you can choose different tasks, For example."),(0,o.kt)("h3",{id:"type-of-tasks"},"Type of Tasks."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'.requestBody([\n     "name": "Victor",\n     "lastname": "Freitas"\n]) // Body\n\n.requestEncoder(model) // Body\n.requestURLParameters(urlParameters: ["transactionId": "ID"]) // Query String\n.requestParameters(bodyParameters: ["name": "Victor"], urlParameters: ["transactionId": "ID"]) // Body with Query String.\n')),(0,o.kt)("h3",{id:"vcodable-model-example"},"VCodable Model Example."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},"struct ExampleModel: VCodable {\n    var name: String\n    var lastname: String\n}\n")),(0,o.kt)("h3",{id:"post-example"},"POST Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-swift"},'enum HomeAPI {\n    case home(ExampleModel)\n}\n\nextension HomeAPI: APIBuilder {\n    \n    var path: URLPath {\n        switch self {\n        case .home:\n            return .plain("jokes/random")\n        }\n    }\n    \n    var httpMethod: HTTPMethods {\n        switch self {\n        case .home:\n            return .post // Define method POST\n        }\n    }\n    \n    var headers: HTTPHeader {\n        .bearer("yourToken")\n    }\n    \n    var task: HTTPTask {\n        switch self {\n        case let .home(model):\n            return .requestEncoder(model) // This performs a request with a body conforms protocol VCodable.\n        }\n    }\n}\n')))}m.isMDXComponent=!0}}]);